goldSQL,prdeictSQL,ind_dev_set,hardness,question,db_id,gold_sql,predicted_sql,Incorrect final column,Missing constraint,Incorrect Constraint,Entity Column,execution,
"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)",6,medium,Show the name and the release year of the song by the youngest singer.,concert_singer,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)",FALSE,FALSE,FALSE,FALSE,FALSE,Incorrect final column
"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name, Song_release_year FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Age = (SELECT MIN(Age) FROM singer)",7,medium,What are the names and release years for all the songs of the youngest singer?,concert_singer,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name, Song_release_year FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Age = (SELECT MIN(Age) FROM singer)",FALSE,FALSE,FALSE,FALSE,FALSE,Data Error
SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > (SELECT AVG(Age) FROM singer),12,hard,List all song names by singers above the average age.,concert_singer,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > (SELECT AVG(Age) FROM singer),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE singer.Age > stadium.Average,13,hard,What are all the song names by singers who are older than average?,concert_singer,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE singer.Age > stadium.Average,FALSE,FALSE,FALSE,FALSE,FALSE,
"select max(capacity), average from stadium","SELECT max(Capacity), avg(Average) FROM stadium",16,medium,What is the maximum capacity and the average of all stadiums ?,concert_singer,"select max(capacity), average from stadium","SELECT max(Capacity), avg(Average) FROM stadium",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T1.Name, COUNT(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID",22,medium,Show the stadium name and the number of concerts in each stadium.,concert_singer,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T1.Name, COUNT(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT Stadium_ID, COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY Stadium_ID",23,medium,"For each stadium, how many concerts play there?",concert_singer,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT Stadium_ID, COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY Stadium_ID",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",26,hard,Which year has most number of concerts?,concert_singer,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",27,hard,What is the year that had the most concerts?,concert_singer,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014),31,hard,Show names for all stadiums except for stadiums having a concert in year 2014.,concert_singer,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014),32,hard,What are the names of all stadiums that did not have a concert in 2014?,concert_singer,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T2.Name, COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name",36,medium,What are the names of the singers and number of concerts for each person?,concert_singer,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T2.Name, COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year IN (2014,2015))",41,extra,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,concert_singer,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year IN (2014,2015))",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT Name, Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN (2014, 2015)",42,extra,What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?,concert_singer,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT Name, Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN (2014, 2015)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType",49,medium,Find the maximum weight for each type of pet. List the maximum weight and pet type.,pets_1,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT PetType, max(weight) FROM Pets GROUP BY PetType",50,medium,List the maximum weight and type for each type of pet.,pets_1,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT PetType, max(weight) FROM Pets GROUP BY PetType",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT COUNT(*) FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.Sex = 'F' AND P.PetType = 'Dog',53,hard,Find the number of dog pets that are raised by female students (with sex F).,pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT COUNT(*) FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.Sex = 'F' AND P.PetType = 'Dog',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT COUNT(*) FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.Sex = 'Female' AND P.PetType = 'Dog',54,hard,How many dog pets are raised by female students?,pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT COUNT(*) FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.Sex = 'Female' AND P.PetType = 'Dog',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')",57,extra,Find the first name of students who have cat or dog pet.,pets_1,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('Cat', 'Dog')",58,extra,What are the first names of every student who has a cat or dog as a pet?,pets_1,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('Cat', 'Dog')",FALSE,FALSE,FALSE,FALSE,FALSE,
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',"SELECT Fname FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat','dog') GROUP BY S.StuID HAVING COUNT(*) = 2",59,extra,Find the first name of students who have both cat and dog pets .,pets_1,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',"SELECT Fname FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat','dog') GROUP BY S.StuID HAVING COUNT(*) = 2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT Student.Major, Student.Age FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType != 'Cat'",62,extra,"What major is every student who does not own a cat as a pet, and also how old are they?",pets_1,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT Student.Major, Student.Age FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType != 'Cat'",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat')),64,hard,What are the ids of the students who do not own cats as pets?,pets_1,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat')),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT Fname FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'Dog' AND S.StuID NOT IN (SELECT StuID FROM Has_Pet AS HP JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'Cat'),66,extra,What is the first name of every student who has a dog but does not have a cat?,pets_1,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT Fname FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'Dog' AND S.StuID NOT IN (SELECT StuID FROM Has_Pet AS HP JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'Cat'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(pet_age) AS Average_Age, MAX(pet_age) AS Maximum_Age FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",71,medium,Find the average and maximum age for each type of pet.,pets_1,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(pet_age) AS Average_Age, MAX(pet_age) AS Maximum_Age FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType",72,medium,What is the average and maximum age for each pet type?,pets_1,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",73,medium,Find the average weight for each pet type.,pets_1,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",74,medium,What is the average weight for each type of pet?,pets_1,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID",75,medium,Find the first name and age of students who have a pet.,pets_1,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID",76,medium,What are the different first names and ages of the students who do have pets?,pets_1,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT StuID, COUNT(*) FROM Has_Pet GROUP BY StuID",79,medium,Find the number of pets for each student who has any pet and student id.,pets_1,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT StuID, COUNT(*) FROM Has_Pet GROUP BY StuID",FALSE,FALSE,FALSE,FALSE,FALSE,
"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT StuID, COUNT(*) FROM Has_Pet GROUP BY StuID",80,medium,"For students who have pets , how many pets does each student have ? list their ids instead of names .",pets_1,"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT StuID, COUNT(*) FROM Has_Pet GROUP BY StuID",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'Cat' AND T3.pet_age  =  3,84,hard,What is the last name of the student who has a cat that is 3 years old?,pets_1,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'Cat' AND T3.pet_age  =  3,FALSE,FALSE,FALSE,TRUE,FALSE,
"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT ContId, Continent, COUNT(*) FROM continents  JOIN countries ON continents.ContId = countries.CountryId  GROUP BY ContId",89,medium,"How many countries does each continent have? List the continent id, continent name and the number of countries.",car_1,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT ContId, Continent, COUNT(*) FROM continents  JOIN countries ON continents.ContId = countries.CountryId  GROUP BY ContId",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT ContId, Continent, COUNT(CountryId) FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY ContId",90,medium,"For each continent, list its id, name, and how many countries it has?",car_1,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT ContId, Continent, COUNT(CountryId) FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY ContId",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS Models_Produced FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY car_makers.Id",94,medium,"What is the full name of each car maker, along with its id and how many models it produces?",car_1,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS Models_Produced FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY car_makers.Id",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data),95,hard,Which model of the car has the minimum horsepower?,car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1,96,hard,What is the model of the car with the smallest amount of horsepower?,car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Weight < (SELECT AVG(Weight) FROM cars_data),97,extra,Find the model of the car whose weight is below the average weight.,car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Weight < (SELECT AVG(Weight) FROM cars_data),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data),98,extra,What is the model for the car with a weight smaller than the average?,car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT Maker FROM car_makers WHERE Id IN (SELECT Maker FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Year = 1970)),99,extra,Find the name of the makers that produced some cars in the year of 1970?,car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT Maker FROM car_makers WHERE Id IN (SELECT Maker FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Year = 1970)),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.MakeId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id WHERE T4.Year  =  1970,100,extra,What is the name of the different car makers who produced a car in 1970?,car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.MakeId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id WHERE T4.Year  =  1970,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT Maker, MIN(Year) FROM car_names  INNER JOIN cars_data ON car_names.MakeId = cars_data.Id  GROUP BY Maker",101,extra,Find the make and production time of the cars that were produced in the earliest year?,car_1,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT Maker, MIN(Year) FROM car_names  INNER JOIN cars_data ON car_names.MakeId = cars_data.Id  GROUP BY Maker",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT Maker, MIN(Year) FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id GROUP BY Maker ORDER BY Year ASC LIMIT 1",102,extra,What is the maker of the carr produced in the earliest year and what year was it?,car_1,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT Maker, MIN(Year) FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id GROUP BY Maker ORDER BY Year ASC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Year > 1980,103,hard,Which distinct car models are the produced after 1980?,car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Year > 1980,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Year > 1980,104,hard,What are the different models for the cards produced after 1980?,car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Year > 1980,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT continents.Continent, COUNT(car_makers.Id)  FROM continents  LEFT JOIN countries ON continents.ContId = countries.Continent  LEFT JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY continents.Continent",106,hard,What is the name of each continent and how many car makers are there in each one?,car_1,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT continents.Continent, COUNT(car_makers.Id)  FROM continents  LEFT JOIN countries ON continents.ContId = countries.Continent  LEFT JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY continents.Continent",FALSE,FALSE,FALSE,FALSE,FALSE,
"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT FullName, COUNT(*) FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY FullName",109,medium,How many car models are produced by each maker ? Only list the count and the maker full name .,car_1,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT FullName, COUNT(*) FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY FullName",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id",110,medium,What is the number of car models that are produced by each maker and what is the id and full name of each maker?,car_1,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT Accelerate FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Maker  WHERE car_makers.FullName = 'amc hornet sportabout (sw)',111,medium,What is the accelerate of the car make amc hornet sportabout (sw)?,car_1,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT Accelerate FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Maker  WHERE car_makers.FullName = 'amc hornet sportabout (sw)',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT Accelerate FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Maker  WHERE car_makers.FullName = 'AMC Hornet Sportabout (sw)',112,medium,How much does the car accelerate that makes amc hornet sportabout (sw)?,car_1,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT Accelerate FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Maker  WHERE car_makers.FullName = 'AMC Hornet Sportabout (sw)',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) FROM car_makers WHERE Country = 'France',113,medium,How many car makers are there in france?,car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) FROM car_makers WHERE Country = 'France',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) FROM car_makers WHERE Country = 'France',114,medium,What is the number of makers of care in France?,car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) FROM car_makers WHERE Country = 'France',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Country = 'USA',115,hard,How many car models are produced in the usa?,car_1,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Country = 'USA',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Maker WHERE T2.Country = 'United States',116,hard,What is the count of the car models produced in the United States?,car_1,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Maker WHERE T2.Country = 'United States',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",121,medium,What are all the makers and models?,car_1,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",122,medium,What are the makers and models?,car_1,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT countries.CountryId, countries.CountryName  FROM countries  INNER JOIN car_makers  ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryId",124,medium,What are the names and ids of all countries with at least one car maker?,car_1,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT countries.CountryId, countries.CountryName  FROM countries  INNER JOIN car_makers  ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryId",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year",127,medium,What is the average weight of cars each year?,car_1,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT Year, AVG(Weight), AVG(Year) FROM cars_data GROUP BY Year",128,medium,What is the average weight and year for each year?,car_1,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT Year, AVG(Weight), AVG(Year) FROM cars_data GROUP BY Year",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT c.CountryName  FROM countries c  JOIN car_makers cm ON c.CountryId = cm.Country  WHERE c.Continent = 'Europe'  GROUP BY c.CountryName  HAVING COUNT(*) >= 3,129,extra,Which countries in europe have at least 3 car manufacturers?,car_1,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT c.CountryName  FROM countries c  JOIN car_makers cm ON c.CountryId = cm.Country  WHERE c.Continent = 'Europe'  GROUP BY c.CountryName  HAVING COUNT(*) >= 3,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT CountryName FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  WHERE countries.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')  GROUP BY CountryName  HAVING COUNT(*) >= 3,130,extra,What are the names of all European countries with at least 3 manufacturers?,car_1,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,SELECT CountryName FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  WHERE countries.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')  GROUP BY CountryName  HAVING COUNT(*) >= 3,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT MAX(Horsepower), Make FROM cars_data   JOIN car_names ON cars_data.MakeId = car_names.MakeId   WHERE Cylinders = 3   GROUP BY Make",131,extra,What is the maximum horsepower and the make of the car models with 3 cylinders?,car_1,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT MAX(Horsepower), Make FROM cars_data   JOIN car_names ON cars_data.MakeId = car_names.MakeId   WHERE Cylinders = 3   GROUP BY Make",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",SELECT MAX(Horsepower) FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId = T2.ModelId JOIN car_names AS T3 ON T2.Maker = T3.Make WHERE Cylinders = 3,132,extra,What is the largest amount of horsepower for the models with 3 cylinders and what make is it?,car_1,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",SELECT MAX(Horsepower) FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId = T2.ModelId JOIN car_names AS T3 ON T2.Maker = T3.Make WHERE Cylinders = 3,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE MPG = (SELECT MAX(MPG) FROM cars_data),133,hard,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE MPG = (SELECT MAX(MPG) FROM cars_data),FALSE,FALSE,FALSE,FALSE,FALSE,
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1,134,hard,What is the car model with the highest mpg ?,car_1,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(Edispl) FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId = T2.ModelId WHERE T2.Model = 'Volvo',137,medium,What is the average edispl of the cars of model volvo?,car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(Edispl) FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId = T2.ModelId WHERE T2.Model = 'Volvo',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Maker WHERE T4.Maker  =  'Volvo',138,medium,What is the average edispl for all volvos?,car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT AVG(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Maker WHERE T4.Maker  =  'Volvo',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",139,medium,What is the maximum accelerate for different number of cylinders?,car_1,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT MAX(Accelerate) FROM cars_data GROUP BY Cylinders,140,medium,What is the maximum accelerate for all the different cylinders?,car_1,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT MAX(Accelerate) FROM cars_data GROUP BY Cylinders,TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT Model, COUNT(*) AS Num_Versions FROM car_names GROUP BY Model ORDER BY Num_Versions DESC LIMIT 1",141,hard,Which model has the most version(make) of cars?,car_1,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT Model, COUNT(*) AS Num_Versions FROM car_names GROUP BY Model ORDER BY Num_Versions DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT Model, COUNT(*) AS Versions FROM model_list GROUP BY Model ORDER BY Versions DESC LIMIT 1",142,hard,What model has the most different versions?,car_1,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT Model, COUNT(*) AS Versions FROM model_list GROUP BY Model ORDER BY Versions DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(*) FROM model_list WHERE Maker = 'American Motor Company',148,medium,What is the number of car models created by the car maker American Motor Company?,car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(*) FROM model_list WHERE Maker = 'American Motor Company',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT Maker, Id FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 3)",150,medium,What are the names and ids of all makers with more than 3 models?,car_1,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT Maker, Id FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 3)",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500,151,extra,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,car_1,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,"SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make IN ('General Motors', 'GM') AND cars_data.Weight > 3500",152,extra,What are the different models created by either the car maker General Motors or weighed more than 3500?,car_1,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,"SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make IN ('General Motors', 'GM') AND cars_data.Weight > 3500",FALSE,FALSE,FALSE,FALSE,FALSE,
select distinct year from cars_data where weight between 3000 and 4000;,SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000,153,easy,In which years cars were produced weighing no less than 3000 and no more than 4000 ?,car_1,select distinct year from cars_data where weight between 3000 and 4000;,SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,"SELECT MAX(Accelerate), Horsepower FROM cars_data",156,medium,What is the horsepower of the car with the greatest accelerate?,car_1,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,"SELECT MAX(Accelerate), Horsepower FROM cars_data",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT Cylinders FROM cars_data WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Maker FROM car_makers WHERE FullName = 'Volvo')) ORDER BY Accelerate ASC LIMIT 1,157,extra,"For model volvo, how many cylinders does the car with the least accelerate have?",car_1,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT Cylinders FROM cars_data WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Maker FROM car_makers WHERE FullName = 'Volvo')) ORDER BY Accelerate ASC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT Cylinders FROM cars_data WHERE MakeId IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Maker FROM car_makers WHERE FullName = 'Volvo'))) ORDER BY Accelerate ASC LIMIT 1,158,extra,"For a volvo model, how many cylinders does the version with least accelerate have?",car_1,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT Cylinders FROM cars_data WHERE MakeId IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Maker FROM car_makers WHERE FullName = 'Volvo'))) ORDER BY Accelerate ASC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data),159,hard,How many cars have a larger accelerate than the car with the largest horsepower?,car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data),FALSE,FALSE,TRUE,FALSE,FALSE,
SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data),160,hard,What is the number of cars with a greater accelerate than the one with the most horsepower?,car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data),FALSE,FALSE,TRUE,FALSE,FALSE,
select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(*) FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2),162,medium,What is the number of countries with more than 2 car makers ?,car_1,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT(*) FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1,165,extra,"For the cars with 4 cylinders, which model has the largest horsepower?",car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1,166,extra,"For all of the 4 cylinder cars, which model has the most horsepower?",car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE Horsepower > (SELECT min(Horsepower) FROM cars_data) AND Cylinders <= 3)",167,extra,"Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",car_1,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE Horsepower > (SELECT min(Horsepower) FROM cars_data) AND Cylinders <= 3)",FALSE,FALSE,FALSE,FALSE,FALSE,
"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE Horsepower < (SELECT MIN(Horsepower) FROM cars_data) AND Cylinders < 4)",168,extra,"Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",car_1,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE Horsepower < (SELECT MIN(Horsepower) FROM cars_data) AND Cylinders < 4)",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId  =  T2.ModelId JOIN cars_data AS T3 ON T2.MakeId  =  T3.Id WHERE T3.Weight  <  3500 AND T1.Maker != 'Ford Motor Company',171,extra,Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId  =  T2.ModelId JOIN cars_data AS T3 ON T2.MakeId  =  T3.Id WHERE T3.Weight  <  3500 AND T1.Maker != 'Ford Motor Company',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Weight < 3500 AND Maker != 'Ford Motor Company',172,extra,What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?,car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE Weight < 3500 AND Maker != 'Ford Motor Company',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT c.CountryName  FROM countries c  LEFT JOIN car_makers cm ON c.CountryId = cm.Country  WHERE cm.Country IS NULL,173,hard,What are the name of the countries where there is not a single car maker?,car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT c.CountryName  FROM countries c  LEFT JOIN car_makers cm ON c.CountryId = cm.Country  WHERE cm.Country IS NULL,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers),174,hard,What are the names of the countries with no car makers?,car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers),FALSE,FALSE,FALSE,FALSE,FALSE,
"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT Id, Maker FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 2) AND Id IN (SELECT Maker FROM car_names GROUP BY Maker HAVING COUNT(*) > 3)",175,extra,Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .,car_1,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT Id, Maker FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) > 2) AND Id IN (SELECT Maker FROM car_names GROUP BY Maker HAVING COUNT(*) > 3)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT DISTINCT car_makers.Id, car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.ModelId = car_names.ModelId INNER JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id HAVING COUNT(model_list.ModelId) >= 2 AND COUNT(cars_data.Id) > 3",176,extra,What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?,car_1,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT DISTINCT car_makers.Id, car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.ModelId = car_names.ModelId INNER JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id HAVING COUNT(model_list.ModelId) >= 2 AND COUNT(cars_data.Id) > 3",FALSE,FALSE,FALSE,FALSE,FALSE,
"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3) OR CountryId IN (SELECT Country FROM car_makers WHERE Maker = 'Fiat')",178,extra,What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?,car_1,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3) OR CountryId IN (SELECT Country FROM car_makers WHERE Maker = 'Fiat')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways',180,easy,What country is Jetblue Airways affiliated with?,flight_2,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways',182,easy,Which abbreviation corresponds to Jetblue Airways?,flight_2,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City, Country FROM airports WHERE AirportCode = 'ALN'",197,medium,Which city and country is the Alton airport at?,flight_2,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City, Country FROM airports WHERE AirportCode = 'ALN'",FALSE,FALSE,FALSE,TRUE,FALSE,
"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City, Country FROM airports WHERE AirportCode = 'ALN'",198,medium,Give the city and country for the Alton airport.,flight_2,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT City, Country FROM airports WHERE AirportCode = 'ALN'",FALSE,FALSE,FALSE,TRUE,FALSE,
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways',213,medium,How many flights does airline 'JetBlue Airways' have?,flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways',214,medium,Give the number of Jetblue Airways flights.,flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"SELECT Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1",229,extra,Which airline has most number of flights?,flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"SELECT Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"SELECT Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1",230,extra,What airline serves the most flights?,flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"SELECT Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation, Country FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)",231,extra,Find the abbreviation and country of the airline that has fewest number of flights?,flight_2,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation, Country FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation, Country FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)",232,extra,What is the abbreviation of the airilne has the fewest flights and what country is it in?,flight_2,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation, Country FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE SourceAirport = 'AHD',233,medium,What are airlines that have some flight departing from airport 'AHD'?,flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE SourceAirport = 'AHD',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE DestAirport = 'AHD',235,medium,What are airlines that have flights arriving at airport 'AHD'?,flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE DestAirport = 'AHD',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10,241,medium,Find all airlines that have at least 10 flights.,flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10,242,medium,Which airlines have at least 10 flights?,flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200,243,medium,Find all airlines that have fewer than 200 flights.,flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200,244,medium,Which airlines have less than 200 flights?,flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT FlightNo FROM flights WHERE Airline = 'United Airlines',245,medium,"What are flight numbers of Airline ""United Airlines""?",flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT FlightNo FROM flights WHERE Airline = 'United Airlines',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT FlightNo FROM flights WHERE Airline = 'United Airlines',246,medium,Which flight numbers correspond to United Airlines flights?,flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT FlightNo FROM flights WHERE Airline = 'United Airlines',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights),258,hard,Which airports do not have departing or arriving flights?,flight_2,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT name FROM employee ORDER BY age,"SELECT Name, Age FROM employee ORDER BY Age ASC",262,easy,List the names of employees and sort in ascending order of age.,employee_hire_evaluation,SELECT name FROM employee ORDER BY age,"SELECT Name, Age FROM employee ORDER BY Age ASC",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City, COUNT(*) FROM employee GROUP BY City",263,medium,What is the number of employees from each city?,employee_hire_evaluation,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City, COUNT(*) FROM employee GROUP BY City",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City, COUNT(*) FROM employee GROUP BY City",264,medium,Count the number of employees for each city.,employee_hire_evaluation,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City, COUNT(*) FROM employee GROUP BY City",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT Location, COUNT(*) FROM shop GROUP BY Location",267,medium,Find the number of shops in each location.,employee_hire_evaluation,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT Location, COUNT(*) FROM shop GROUP BY Location",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT Location, COUNT(*) FROM shop GROUP BY Location",268,medium,How many shops are there in each location?,employee_hire_evaluation,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT Location, COUNT(*) FROM shop GROUP BY Location",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)",269,medium,Find the manager name and district of the shop whose number of products is the largest.,employee_hire_evaluation,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Name, District FROM shop ORDER BY Number_products DESC LIMIT 1",270,medium,What are the manager name and district of the shop that sells the largest number of products?,employee_hire_evaluation,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Name, District FROM shop ORDER BY Number_products DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT shop.Name, COUNT(hiring.Employee_ID)  FROM shop  JOIN hiring  ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Shop_ID",287,medium,Find the number of employees hired in each shop; show the shop name as well.,employee_hire_evaluation,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT shop.Name, COUNT(hiring.Employee_ID)  FROM shop  JOIN hiring  ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Shop_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT shop.Name, COUNT(hiring.Employee_ID) FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID",288,medium,"For each shop, return the number of employees working there and the name of the shop.",employee_hire_evaluation,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT shop.Name, COUNT(hiring.Employee_ID) FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(DISTINCT template_id) FROM Documents,SELECT COUNT(DISTINCT Template_ID) FROM Templates,306,easy,Count the number of different templates used for documents.,cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT COUNT(DISTINCT Template_ID) FROM Templates,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT COUNT(*) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types AS R ON T.Template_Type_Code = R.Template_Type_Code WHERE R.Template_Type_Description = 'PPT',308,medium,Count the number of documents that use the PPT template type.,cre_Doc_Template_Mgt,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT COUNT(*) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types AS R ON T.Template_Type_Code = R.Template_Type_Code WHERE R.Template_Type_Description = 'PPT',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT Template_ID FROM Templates   GROUP BY Template_ID   HAVING COUNT(*) > 1,314,easy,What are the template ids of any templates used in more than a single document?,cre_Doc_Template_Mgt,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT Template_ID FROM Templates   GROUP BY Template_ID   HAVING COUNT(*) > 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT template_type_code FROM Templates,SELECT Template_Type_Code FROM Ref_Template_Types,322,easy,What are the different template type codes?,cre_Doc_Template_Mgt,SELECT DISTINCT template_type_code FROM Templates,SELECT Template_Type_Code FROM Ref_Template_Types,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",SELECT COUNT(*) FROM Ref_Template_Types  WHERE Template_Type_Code = 'CV',326,easy,Count the number of templates of the type CV.,cre_Doc_Template_Mgt,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",SELECT COUNT(*) FROM Ref_Template_Types  WHERE Template_Type_Code = 'CV',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Ref_Template_Types  JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  GROUP BY Template_Type_Code",329,medium,Show all template type codes and number of templates for each.,cre_Doc_Template_Mgt,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Ref_Template_Types  JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  GROUP BY Template_Type_Code",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,"SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",331,hard,Which template type code has most number of templates?,cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,"SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*)  >  3),334,easy,What are the codes of template types that have fewer than 3 templates?,cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*)  >  3),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Ref_Template_Types  INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Template_Type_Code",341,medium,Show all template type codes and the number of documents using each type.,cre_Doc_Template_Mgt,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Ref_Template_Types  INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Template_Type_Code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Ref_Template_Types  INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Template_Type_Code",342,medium,"What are the different template type codes, and how many documents use each type?",cre_Doc_Template_Mgt,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code, COUNT(*) FROM Ref_Template_Types  INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Template_Type_Code",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,"SELECT Template_Type_Code, COUNT(*) AS Count_of_Documents  FROM Documents  INNER JOIN Templates  ON Documents.Template_ID = Templates.Template_ID  GROUP BY Template_Type_Code  ORDER BY Count_of_Documents DESC  LIMIT 1",343,extra,Which template type code is used by most number of documents?,cre_Doc_Template_Mgt,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,"SELECT Template_Type_Code, COUNT(*) AS Count_of_Documents  FROM Documents  INNER JOIN Templates  ON Documents.Template_ID = Templates.Template_ID  GROUP BY Template_Type_Code  ORDER BY Count_of_Documents DESC  LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1,344,extra,Return the code of the template type that is most commonly used in documents.,cre_Doc_Template_Mgt,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation',356,medium,Return the ids corresponding to templates with the description 'Presentation'.,cre_Doc_Template_Mgt,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation',FALSE,FALSE,FALSE,FALSE,FALSE,
select other_details from paragraphs where paragraph_text like 'korea',"SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text = 'Korea'",361,medium,Show paragraph details for paragraph with text 'Korea ' .,cre_Doc_Template_Mgt,select other_details from paragraphs where paragraph_text like 'korea',"SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text = 'Korea'",FALSE,FALSE,FALSE,FALSE,FALSE,
select other_details from paragraphs where paragraph_text like 'korea',"SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",362,medium,What are the details for the paragraph that includes the text 'Korea ' ?,cre_Doc_Template_Mgt,select other_details from paragraphs where paragraph_text like 'korea',"SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Num_Paragraphs FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",369,medium,"Show all document ids, names and the number of paragraphs in each document.",cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Num_Paragraphs FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",370,medium,"What are the ids and names of each document, as well as the number of paragraphs in each?",cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID, Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID ORDER BY COUNT(*) DESC LIMIT 1",374,extra,Return the id and name of the document with the most paragraphs.,cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID, Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID ORDER BY COUNT(*) DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(*) ASC LIMIT 1,376,hard,Return the id of the document with the fewest paragraphs.,cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(*) ASC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2,377,easy,What is the document id with 1 to 2 paragraphs?,cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2,378,easy,Give the ids of documents that have between one and two paragraphs.,cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Age ,  Hometown FROM teacher","SELECT Name, Age, Hometown FROM teacher",386,medium,What is the age and hometown of every teacher?,course_teach,"SELECT Age ,  Hometown FROM teacher","SELECT Name, Age, Hometown FROM teacher",TRUE,FALSE,FALSE,FALSE,FALSE,
"select name from teacher where hometown != ""little lever urban district""",SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',387,easy,List the name of teachers whose hometown is not `` Little Lever Urban District '' .,course_teach,"select name from teacher where hometown != ""little lever urban district""",SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',FALSE,FALSE,FALSE,FALSE,FALSE,
"select name from teacher where hometown != ""little lever urban district""",SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',388,easy,What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?,course_teach,"select name from teacher where hometown != ""little lever urban district""",SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Hometown, COUNT(*) AS Num_Teachers FROM teacher GROUP BY Hometown ORDER BY Num_Teachers DESC LIMIT 1",395,hard,List the most common hometown of teachers.,course_teach,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Hometown, COUNT(*) AS Num_Teachers FROM teacher GROUP BY Hometown ORDER BY Num_Teachers DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Hometown, COUNT(*) AS Num_Teachers FROM teacher GROUP BY Hometown ORDER BY Num_Teachers DESC LIMIT 1",396,hard,What is the most commmon hometowns for teachers?,course_teach,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Hometown, COUNT(*) AS Num_Teachers FROM teacher GROUP BY Hometown ORDER BY Num_Teachers DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T2.Name, T1.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T2.Name ASC",401,hard,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,course_teach,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T2.Name, T1.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T2.Name ASC",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T2.Name FROM course AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T1.Course  =  'math',403,hard,Show the name of the teacher for the math course.,course_teach,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T2.Name FROM course AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T1.Course  =  'math',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'",417,medium,What are the opening year and staff number of the museum named Plaza Museum?,museum_visit,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT T2.ID, T2.Name, T2.Level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID ORDER BY T1.Total_spent DESC LIMIT 1",420,extra,"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",museum_visit,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT T2.ID, T2.Name, T2.Level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID ORDER BY T1.Total_spent DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT SUM(Num_of_Ticket * Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE Level_of_membership = 1,425,medium,What is the total ticket expense of the visitors whose membership level is 1?,museum_visit,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT SUM(Num_of_Ticket * Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE Level_of_membership = 1,TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  <  2009 INTERSECT SELECT Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  >  2011,426,extra,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,museum_visit,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  <  2009 INTERSECT SELECT Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  >  2011,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT min(loser_rank) FROM matches,SELECT MAX(loser_rank) FROM matches,439,easy,Find the highest rank of losers in all matches.,wta_1,SELECT min(loser_rank) FROM matches,SELECT MAX(loser_rank) FROM matches,TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT min(loser_rank) FROM matches,SELECT MAX(loser_rank) FROM matches,440,easy,What is the best rank of losers across all matches?,wta_1,SELECT min(loser_rank) FROM matches,SELECT MAX(loser_rank) FROM matches,TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT DISTINCT T1.winner_name FROM matches AS T1 JOIN matches AS T2 ON T1.winner_name  =  T2.winner_name WHERE T1.year  =  2013 AND T2.year  =  2016,447,hard,List the names of all winners who played in both 2013 and 2016.,wta_1,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT DISTINCT T1.winner_name FROM matches AS T1 JOIN matches AS T2 ON T1.winner_name  =  T2.winner_name WHERE T1.year  =  2013 AND T2.year  =  2016,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT DISTINCT T1.first_name, T1.last_name  FROM players AS T1  JOIN matches AS T2  ON T1.player_id = T2.winner_id  WHERE T2.year IN (2013, 2016)",448,hard,What are the names of players who won in both 2013 and 2016?,wta_1,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT DISTINCT T1.first_name, T1.last_name  FROM players AS T1  JOIN matches AS T2  ON T1.player_id = T2.winner_id  WHERE T2.year IN (2013, 2016)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY T1.player_id HAVING COUNT(*) = 2",451,extra,What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?,wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY T1.player_id HAVING COUNT(*) = 2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.first_name, T1.country_code  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name = 'WTA Championships'  INTERSECT  SELECT T1.first_name, T1.country_code  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name = 'Australian Open'",452,extra,What are the first names and country codes for players who won both the WTA Championships and the Australian Open?,wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT T1.first_name, T1.country_code  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name = 'WTA Championships'  INTERSECT  SELECT T1.first_name, T1.country_code  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name = 'Australian Open'",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date",455,medium,List the first and last name of all players in the order of birth date.,wta_1,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date",456,medium,"What are the full names of all players, sorted by birth date?",wta_1,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name, last_name FROM players ORDER BY birth_date",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY SUM(tours) DESC LIMIT 1",459,hard,Find the first name and country code of the player who did the most number of tours.,wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY SUM(tours) DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY tours DESC LIMIT 1",460,hard,What is the first name and country code of the player with the most tours?,wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY tours DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1",461,hard,Find the year that has the most number of matches.,wta_1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",462,hard,Which year had the most matches?,wta_1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT winner_name, winner_rank_points  FROM matches  JOIN rankings ON matches.winner_id = rankings.player_id  GROUP BY winner_name  ORDER BY COUNT(*) DESC  LIMIT 1",464,hard,"What is the name of the winner who has won the most matches, and how many rank points does this player have?",wta_1,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT winner_name, winner_rank_points  FROM matches  JOIN rankings ON matches.winner_id = rankings.player_id  GROUP BY winner_name  ORDER BY COUNT(*) DESC  LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)",467,medium,find the names of loser and winner who played in the match with greatest number of minutes.,wta_1,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, AVG(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",469,medium,Find the average ranking for each player and their first name.,wta_1,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, AVG(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, AVG(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name",470,medium,"What are the first names of all players, and their average rankings?",wta_1,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, AVG(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",471,medium,Find the total ranking points for each player and their first name.,wta_1,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, SUM(ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",472,medium,"What are the first names of all players, and their total ranking points?",wta_1,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, SUM(ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT country_code, COUNT(*) FROM players GROUP BY country_code",473,medium,find the number of players for each country.,wta_1,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT country_code, COUNT(*) FROM players GROUP BY country_code",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT country_code, COUNT(*) FROM players GROUP BY country_code",474,medium,How many players are from each country?,wta_1,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT country_code, COUNT(*) FROM players GROUP BY country_code",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"SELECT country_code, COUNT(*) AS num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1",475,hard,find the code of the country where has the greatest number of players.,wta_1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"SELECT country_code, COUNT(*) AS num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"SELECT country_code, COUNT(*) AS num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1",476,hard,What is the code of the country with the most players?,wta_1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"SELECT country_code, COUNT(*) AS num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date",479,medium,Find the total number of tours for each ranking date.,wta_1,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date",480,medium,How many total tours were there for each ranking date?,wta_1,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT year, COUNT(*) FROM matches GROUP BY year",481,medium,Find the number of matches happened in each year.,wta_1,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT year, COUNT(*) FROM matches GROUP BY year",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT year, COUNT(*) FROM matches GROUP BY year",482,medium,How many matches were played in each year?,wta_1,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT year, COUNT(*) FROM matches GROUP BY year",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships',486,medium,Find the number of left handed winners who participated in the WTA Championships.,wta_1,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand, COUNT(*) FROM players GROUP BY hand",489,medium,Find the number of players for each hand type.,wta_1,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand, COUNT(*) FROM players GROUP BY hand",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand, COUNT(*) FROM players GROUP BY hand",490,medium,How many players are there for each hand type?,wta_1,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand, COUNT(*) FROM players GROUP BY hand",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT name ,  date FROM battle","SELECT name, date, result FROM battle",493,medium,"List the name, date and result of each battle.",battle_death,"SELECT name ,  date FROM battle","SELECT name, date, result FROM battle",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT id,name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) > 10)",499,hard,What are the ids and names of the battles that led to more than 10 people killed in total.,battle_death,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT id,name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) > 10)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT lost_in_battle, name FROM ship JOIN death ON lost_in_battle = caused_by_ship_id ORDER BY SUM(injured) DESC LIMIT 1",500,extra,What is the ship id and name that caused most total injuries?,battle_death,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT lost_in_battle, name FROM ship JOIN death ON lost_in_battle = caused_by_ship_id ORDER BY SUM(injured) DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name IN ('Lettice', 'HMS Atalanta')",504,extra,List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',battle_death,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name IN ('Lettice', 'HMS Atalanta')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')",505,extra,"Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",battle_death,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT department_name, department_id FROM departments  INNER JOIN degree_programs ON departments.department_id = degree_programs.department_id  GROUP BY departments.department_id  ORDER BY COUNT(*) DESC  LIMIT 1",515,extra,Which department offers the most number of degrees? List department name and id.,student_transcripts_tracking,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT department_name, department_id FROM departments  INNER JOIN degree_programs ON departments.department_id = degree_programs.department_id  GROUP BY departments.department_id  ORDER BY COUNT(*) DESC  LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT department_name, department_id FROM Departments  INNER JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id  GROUP BY Departments.department_id  ORDER BY COUNT(*) DESC  LIMIT 1",516,extra,What is the name and id of the department with the most number of degrees ?,student_transcripts_tracking,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT department_name, department_id FROM Departments  INNER JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id  GROUP BY Departments.department_id  ORDER BY COUNT(*) DESC  LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs,520,easy,How many different degrees are offered?,student_transcripts_tracking,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs,TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT course_name, course_id FROM courses WHERE course_id NOT IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) > 2)",526,medium,What are the names and ids of every course with less than 2 sections?,student_transcripts_tracking,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT course_name, course_id FROM courses WHERE course_id NOT IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) > 2)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT semester_name, semester_id FROM Semesters   JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id   GROUP BY semester_id   ORDER BY COUNT(*) DESC   LIMIT 1",530,extra,"For each semester, what is the name and id of the one with the most students registered?",student_transcripts_tracking,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT semester_name, semester_id FROM Semesters   JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id   GROUP BY semester_id   ORDER BY COUNT(*) DESC   LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM departments WHERE department_name LIKE '%the computer%',531,medium,What is the description of the department whose name has the substring the computer?,student_transcripts_tracking,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM departments WHERE department_name LIKE '%the computer%',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T4.first_name ,  T4.middle_name ,  T4.last_name ,  T4.student_id FROM student_enrolment AS T1 JOIN student_enrolment AS T2 ON T1.semester_id  =  T2.semester_id JOIN students AS T4 ON T1.student_id  =  T4.student_id WHERE T1.degree_program_id  !=  T2.degree_program_id AND T1.student_id  =  T2.student_id GROUP BY T4.student_id HAVING count(*)  =  2",533,medium,"Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",student_transcripts_tracking,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T4.first_name ,  T4.middle_name ,  T4.last_name ,  T4.student_id FROM student_enrolment AS T1 JOIN student_enrolment AS T2 ON T1.semester_id  =  T2.semester_id JOIN students AS T4 ON T1.student_id  =  T4.student_id WHERE T1.degree_program_id  !=  T2.degree_program_id AND T1.student_id  =  T2.student_id GROUP BY T4.student_id HAVING count(*)  =  2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT S.student_id, S.first_name, S.middle_name, S.last_name FROM Students S INNER JOIN Student_Enrolment SE ON S.student_id = SE.student_id INNER JOIN Semesters SM ON SE.semester_id = SM.semester_id GROUP BY S.student_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2",534,medium,"What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",student_transcripts_tracking,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT S.student_id, S.first_name, S.middle_name, S.last_name FROM Students S INNER JOIN Student_Enrolment SE ON S.student_id = SE.student_id INNER JOIN Semesters SM ON SE.semester_id = SM.semester_id GROUP BY S.student_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT first_name, middle_name, last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'",535,hard,"Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",student_transcripts_tracking,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT first_name, middle_name, last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT first_name, middle_name, last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'",536,hard,"What are the first, middle, and last names for everybody enrolled in a Bachelors program?",student_transcripts_tracking,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT first_name, middle_name, last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"SELECT T1.degree_summary_name, COUNT(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",537,extra,Find the kind of program which most number of students are enrolled in?,student_transcripts_tracking,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"SELECT T1.degree_summary_name, COUNT(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"SELECT T1.degree_summary_name, COUNT(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",538,extra,What is the degree summary name that has the most number of students enrolled?,student_transcripts_tracking,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"SELECT T1.degree_summary_name, COUNT(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(*) AS num_enrollments FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.student_id ORDER BY num_enrollments DESC LIMIT 1",542,extra,"What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",student_transcripts_tracking,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(*) AS num_enrollments FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.student_id ORDER BY num_enrollments DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM student_enrolment),549,extra,Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.,student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM student_enrolment),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id  =  T2.address_id LEFT JOIN student_enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  =  'North Carolina' AND T3.degree_program_id  IS  NULL,550,extra,What are the last name of the students who live in North Carolina but have not registered in any degree programs?,student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id  =  T2.address_id LEFT JOIN student_enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  =  'North Carolina' AND T3.degree_program_id  IS  NULL,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)",551,medium,Show the date and id of the transcript with at least 2 course results.,student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)",552,medium,What is the date and id of the transcript with at least 2 courses listed?,student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)",FALSE,FALSE,FALSE,FALSE,FALSE,
select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward',554,medium,What is the mobile phone number of the student named Timmothy Ward ?,student_transcripts_tracking,select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(*) DESC LIMIT 1",561,extra,Which address holds the most number of students currently? List the address id and all lines.,student_transcripts_tracking,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",SELECT MIN(transcript_date) FROM Transcripts,566,medium,"What is the earliest date of a transcript release, and what details can you tell me?",student_transcripts_tracking,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",SELECT MIN(transcript_date) FROM Transcripts,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT student_course_id, COUNT(*) AS max_occurrences FROM Transcript_Contents GROUP BY student_course_id ORDER BY max_occurrences DESC LIMIT 1",571,hard,How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.,student_transcripts_tracking,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT student_course_id, COUNT(*) AS max_occurrences FROM Transcript_Contents GROUP BY student_course_id ORDER BY max_occurrences DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT MAX(COUNT(*)) AS max_times, course_id FROM Transcript_Contents  GROUP BY course_id  ORDER BY max_times DESC  LIMIT 1",572,hard,What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?,student_transcripts_tracking,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT MAX(COUNT(*)) AS max_times, course_id FROM Transcript_Contents  GROUP BY course_id  ORDER BY max_times DESC  LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT MIN(transcript_date), transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents)",574,extra,What is the date and id of the transcript with the least number of results?,student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT MIN(transcript_date), transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents)",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"SELECT semester_name  FROM semesters  WHERE semester_id IN (SELECT semester_id                        FROM student_enrolment                        WHERE degree_program_id IN (SELECT degree_program_id                                                   FROM degree_programs                                                   WHERE degree_summary_name IN ('Master','Bachelor')))",575,extra,Find the semester when both Master students and Bachelor students got enrolled in.,student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"SELECT semester_name  FROM semesters  WHERE semester_id IN (SELECT semester_id                        FROM student_enrolment                        WHERE degree_program_id IN (SELECT degree_program_id                                                   FROM degree_programs                                                   WHERE degree_summary_name IN ('Master','Bachelor')))",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Masters', 'Bachelors')) GROUP BY semester_id",576,extra,What is the id of the semester that had both Masters and Bachelors students enrolled?,student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Masters', 'Bachelors')) GROUP BY semester_id",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(DISTINCT current_address_id) FROM Students,"SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM Addresses INNER JOIN Students ON Addresses.address_id = Students.current_address_id OR Addresses.address_id = Students.permanent_address_id",578,easy,What are the different addresses that have students living there?,student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,"SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM Addresses INNER JOIN Students ON Addresses.address_id = Students.current_address_id OR Addresses.address_id = Students.permanent_address_id",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"SELECT student_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC",579,easy,List all the student details in reversed lexicographical order.,student_transcripts_tracking,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"SELECT student_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT * FROM Students ORDER BY last_name DESC,580,easy,What other details can you tell me about students in reverse alphabetical order?,student_transcripts_tracking,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT * FROM Students ORDER BY last_name DESC,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT section_description FROM Sections WHERE section_name  =  'h',"SELECT section_id, course_id, section_name, section_description, other_details FROM Sections WHERE section_id = 'h'",581,easy,Describe the section h.,student_transcripts_tracking,SELECT section_description FROM Sections WHERE section_name  =  'h',"SELECT section_id, course_id, section_name, section_description, other_details FROM Sections WHERE section_id = 'h'",FALSE,FALSE,FALSE,FALSE,FALSE,
select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582',583,hard,Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .,student_transcripts_tracking,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582',FALSE,FALSE,FALSE,FALSE,FALSE,
select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT first_name FROM students AS T1 JOIN addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' OR T1.cell_mobile_number  =  '09700166582',584,hard,What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?,student_transcripts_tracking,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT first_name FROM students AS T1 JOIN addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' OR T1.cell_mobile_number  =  '09700166582',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones',587,easy,"List all cartoon directed by ""Ben Jones"".",tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones',TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel,598,medium,How many different series and contents are listed in the TV Channel table?,tvshow,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle'),610,medium,"What is the series name of the TV Channel that shows the cartoon ""The Rise of the Blue Beetle""?",tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle'),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Episode FROM TV_series ORDER BY rating,"SELECT Episode, Rating FROM TV_series ORDER BY Rating",613,easy,List the Episode of all TV series sorted by rating.,tvshow,SELECT Episode FROM TV_series ORDER BY rating,"SELECT Episode, Rating FROM TV_series ORDER BY Rating",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT Episode FROM TV_series ORDER BY rating,"SELECT Episode, Rating FROM TV_series ORDER BY Rating",614,easy,What are all of the episodes ordered by ratings?,tvshow,SELECT Episode FROM TV_series ORDER BY rating,"SELECT Episode, Rating FROM TV_series ORDER BY Rating",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(Share), max(Share) FROM TV_series",617,medium,What is minimum and maximum share of TV series?,tvshow,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(Share), max(Share) FROM TV_series",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT Episode FROM TV_series WHERE series_name = 'Sky Radio',625,medium,"List the Episode of all  TV series showed on TV Channel with series name ""Sky Radio"".",tvshow,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT Episode FROM TV_series WHERE series_name = 'Sky Radio',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT Episode FROM TV_series WHERE series_name = 'Sky Radio',626,medium,"What is the episode for the TV series named ""Sky Radio""?",tvshow,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT Episode FROM TV_series WHERE series_name = 'Sky Radio',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by",627,medium,Find the number of cartoons directed by each of the listed directors.,tvshow,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by",628,medium,How many cartoons did each director create?,tvshow,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'",631,medium,Find the package choice and series name of the TV channel that has high definition TV.,tvshow,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'",632,medium,What are the package options and the name of the series for the TV Channel that supports high definition TV?,tvshow,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE Content = 'Cartoon' AND id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),633,medium,which countries' tv channels are playing some cartoon written by Todd Casey?,tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE Content = 'Cartoon' AND id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE Content = 'Cartoon' AND id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),634,medium,What are the countries that have cartoons on TV that were written by Todd Casey?,tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE Content = 'Cartoon' AND id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),635,hard,which countries' tv channels are not playing any cartoon written by Todd Casey?,tvshow,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE Content != 'Cartoon' AND NOT EXISTS (SELECT * FROM Cartoon WHERE Written_by = 'Todd Casey'),636,hard,What are the countries that are not playing cartoons written by Todd Casey?,tvshow,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE Content != 'Cartoon' AND NOT EXISTS (SELECT * FROM Cartoon WHERE Written_by = 'Todd Casey'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel INNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang')",637,extra,Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?,tvshow,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel INNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name, T1.Country  FROM TV_Channel AS T1  JOIN Cartoon AS T2  ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')",638,extra,What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?,tvshow,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name, T1.Country  FROM TV_Channel AS T1  JOIN Cartoon AS T2  ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2),641,easy,find id of the tv channels that from the countries where have more than two tv channels.,tvshow,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2,642,easy,What are the ids of all tv channels that have more than 2 TV channels?,tvshow,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",675,hard,What is the most common nationality of people?,poker_player,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Nationality, COUNT(*) as count FROM people GROUP BY Nationality ORDER BY count DESC LIMIT 1",676,hard,Give the nationality that is most common across all people.,poker_player,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Nationality, COUNT(*) as count FROM people GROUP BY Nationality ORDER BY count DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(*) FROM area_code_state,SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE,687,easy,How many states are there?,voter_1,SELECT count(*) FROM area_code_state,SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE,TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number GROUP BY T1.area_code ORDER BY COUNT(*) DESC LIMIT 1,698,extra,What is the area code in which the most voters voted?,voter_1,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number GROUP BY T1.area_code ORDER BY COUNT(*) DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT created, state, phone_number FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'",699,medium,"What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",voter_1,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT created, state, phone_number FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number JOIN CONTESTANTS AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number JOIN CONTESTANTS AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Kelly Clauss',700,extra,List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.,voter_1,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number JOIN CONTESTANTS AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number JOIN CONTESTANTS AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Kelly Clauss',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%',704,easy,How many countries have a republic as their form of government?,world_1,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%',FALSE,FALSE,TRUE,FALSE,FALSE,
"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%',705,easy,How many countries have governments that are republics?,world_1,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%',FALSE,FALSE,TRUE,FALSE,FALSE,
"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Region FROM country WHERE Name = 'Kabul',710,medium,Which region is the city Kabul located in?,world_1,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Region FROM country WHERE Name = 'Kabul',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Region FROM country WHERE Name = 'Kabul',711,medium,What region is Kabul in?,world_1,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Region FROM country WHERE Name = 'Kabul',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1","SELECT Language, MAX(Percentage) FROM countrylanguage WHERE CountryCode = 'ABW'",712,extra,Which language is the most popular in Aruba?,world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1","SELECT Language, MAX(Percentage) FROM countrylanguage WHERE CountryCode = 'ABW'",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1,713,extra,What language is predominantly spoken in Aruba?,world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region, Population FROM country WHERE Name = 'Angola'",716,medium,What are the region and population of Angola?,world_1,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region, Population FROM country WHERE Name = 'Angola'",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region, Population FROM country WHERE Name = 'Angola'",717,medium,What region does Angola belong to and what is its population?,world_1,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region, Population FROM country WHERE Name = 'Angola'",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm LIKE '%US%'",731,medium,Give the mean GNP and total population of nations which are considered US territory.,world_1,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm LIKE '%US%'",FALSE,FALSE,TRUE,FALSE,FALSE,
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1),740,extra,What is name of the country that speaks the largest number of languages?,world_1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1),741,extra,Give the name of the nation that uses the greatest amount of languages.,world_1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Continent, COUNT(DISTINCT Language) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY NumLanguages DESC LIMIT 1",742,extra,Which continent has the most diverse languages?,world_1,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Continent, COUNT(DISTINCT Language) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY NumLanguages DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Continent, COUNT(*) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY NumLanguages DESC LIMIT 1",743,extra,Which continent speaks the most languages?,world_1,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Continent, COUNT(*) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY NumLanguages DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","SELECT COUNT(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(*) = 2",744,easy,How many countries speak both English and Dutch?,world_1,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","SELECT COUNT(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(*) = 2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","SELECT COUNT(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch')",745,easy,What is the number of nations that use English and Dutch?,world_1,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","SELECT COUNT(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') GROUP BY CountryCode HAVING COUNT(*) = 2)",746,extra,What are the names of nations speak both English and French?,world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') GROUP BY CountryCode HAVING COUNT(*) = 2)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') GROUP BY CountryCode HAVING COUNT(*) = 2)",747,extra,Give the names of nations that speak both English and French.,world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') GROUP BY CountryCode HAVING COUNT(*) = 2)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') AND IsOfficial = 'T')",748,extra,What are the names of nations where both English and French are official languages?,world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') AND IsOfficial = 'T')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') AND IsOfficial = 'T')",749,extra,Give the names of countries with English and French as official languages.,world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','French') AND IsOfficial = 'T')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('Dutch','English'))",753,hard,Which regions speak Dutch or English?,world_1,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('Dutch','English'))",FALSE,FALSE,FALSE,FALSE,FALSE,
"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','Dutch') AND IsOfficial = 'T')",754,extra,What are the countries where either English or Dutch is the official language ?,world_1,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','Dutch') AND IsOfficial = 'T')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','Dutch') AND IsOfficial = 'T')",755,extra,Which countries have either English or Dutch as an official language?,world_1,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""","SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English','Dutch') AND IsOfficial = 'T')",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","SELECT Language, MAX(Percentage) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE Continent = 'Asia' GROUP BY Language",756,extra,Which language is the most popular on the Asian continent?,world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","SELECT Language, MAX(Percentage) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE Continent = 'Asia' GROUP BY Language",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic' GROUP BY Code HAVING COUNT(*) = 1),759,hard,What languages are only used by a single country with a republic government?,world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic' GROUP BY Code HAVING COUNT(*) = 1),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' ORDER BY T1.Population DESC LIMIT 1,760,extra,Find the city with the largest population that uses English.,world_1,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' ORDER BY T1.Population DESC LIMIT 1,TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT SUM(c.Population)  FROM country c  JOIN countrylanguage cl  ON c.Code = cl.CountryCode  WHERE cl.Language != 'English',766,extra,What is the total number of people living in the nations that do not use English?,world_1,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT SUM(c.Population)  FROM country c  JOIN countrylanguage cl  ON c.Code = cl.CountryCode  WHERE cl.Language != 'English',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.IndepYear  <  1930,770,medium,What is the total number of unique official languages spoken in the countries that are founded before 1930?,world_1,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.IndepYear  <  1930,FALSE,TRUE,FALSE,FALSE,FALSE,
"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930),771,medium,"For the countries founded before 1930, what is the total number of distinct official languages?",world_1,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",SELECT Name FROM country WHERE Continent = 'Europe' AND SurfaceArea < (SELECT MAX(SurfaceArea) FROM country WHERE Continent != 'Europe'),772,hard,What are the countries that have greater surface area than any country in Europe?,world_1,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",SELECT Name FROM country WHERE Continent = 'Europe' AND SurfaceArea < (SELECT MAX(SurfaceArea) FROM country WHERE Continent != 'Europe'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",SELECT Name FROM country WHERE Continent = 'Europe' AND SurfaceArea < (SELECT MAX(SurfaceArea) FROM country WHERE Continent != 'Europe'),773,hard,Which countries have greater area than that of any country in Europe?,world_1,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",SELECT Name FROM country WHERE Continent = 'Europe' AND SurfaceArea < (SELECT MAX(SurfaceArea) FROM country WHERE Continent != 'Europe'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")",SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia'),774,extra,What are the African countries that have a  population less than any country in Asia?,world_1,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")",SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia'),FALSE,FALSE,TRUE,FALSE,FALSE,
"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")",SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa'),777,extra,What are the Asian countries which have a population larger than that of any country in Africa?,world_1,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")",SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa'),FALSE,FALSE,TRUE,FALSE,FALSE,
"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),778,hard,What are the country codes for countries that do not speak English?,world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),779,hard,Return the country codes for countries that do not speak English.,world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),781,easy,Give the country codes for countries in which people speak langauges that are not English.,world_1,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Europe' AND T3.Language  =  'English' AND T3.IsOfficial  =  'F',784,extra,Which cities are in European countries where English is not the official language?,world_1,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Europe' AND T3.Language  =  'English' AND T3.IsOfficial  =  'F',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Europe' AND T3.Language  =  'English' AND T3.IsOfficial  =  'F',785,extra,What are the names of cities in Europe for which English is not the official language?,world_1,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Europe' AND T3.Language  =  'English' AND T3.IsOfficial  =  'F',FALSE,FALSE,FALSE,FALSE,FALSE,
"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Asia' AND T3.Language  =  'Chinese' AND T3.IsOfficial  =  'T',786,hard,Which unique cities are in Asian countries where Chinese is the official language ?,world_1,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code JOIN countrylanguage AS T3 ON T2.Code  =  T3.CountryCode WHERE T2.Continent  =  'Asia' AND T3.Language  =  'Chinese' AND T3.IsOfficial  =  'T',FALSE,FALSE,FALSE,TRUE,FALSE,
"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",788,medium,"What are the name, independence year, and surface area of the country with the smallest population?",world_1,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",789,medium,"Give the name, year of independence, and surface area of the country that has the lowest population.",world_1,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT T1.Population, T1.Name, T1.HeadOfState FROM country AS T1 ORDER BY T1.SurfaceArea DESC LIMIT 1",790,medium,"What are the population, name and leader of the country with the largest area?",world_1,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT T1.Population, T1.Name, T1.HeadOfState FROM country AS T1 ORDER BY T1.SurfaceArea DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >=  3",792,medium,Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.,world_1,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >=  3",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT Name, COUNT(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Name HAVING COUNT(*) > 2",793,medium,"What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",world_1,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT Name, COUNT(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Name HAVING COUNT(*) > 2",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",794,extra,Find the number of cities in each district whose population is greater than the average population of cities?,world_1,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",795,extra,How many cities in each district have a population that is above the average population across all cities?,world_1,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm",796,medium,Find the government form name and total population for each government form whose average life expectancy is longer than 72.,world_1,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm",797,medium,What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?,world_1,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",798,medium,Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?,world_1,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT Continent, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",799,medium,"What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",world_1,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT Continent, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",FALSE,FALSE,FALSE,FALSE,FALSE,
"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000",810,hard,What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?,world_1,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000",FALSE,FALSE,FALSE,FALSE,FALSE,
"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population) ,  AVG(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000",811,hard,Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .,world_1,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population) ,  AVG(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.Name, T2.Language, T2.Percentage  FROM country AS T1  JOIN countrylanguage AS T2  ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T'  ORDER BY T2.Percentage DESC",816,medium,What is the language spoken by the largest percentage of people in each country?,world_1,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.Name, T2.Language, T2.Percentage  FROM country AS T1  JOIN countrylanguage AS T2  ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T'  ORDER BY T2.Percentage DESC",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T2.Percentage DESC",817,medium,"What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",world_1,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T2.Percentage DESC",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish'),818,extra,What is the total number of countries where Spanish is spoken by the largest percentage of people?,world_1,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish'),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T',819,extra,Count the number of countries for which Spanish is the predominantly spoken language.,world_1,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T',FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1,820,medium,What are the codes of countries where Spanish is spoken by the largest percentage of people?,world_1,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT CountryCode FROM countrylanguage WHERE Language  =  'Spanish' AND IsOfficial  =  'T',821,medium,Return the codes of countries for which Spanish is the predominantly spoken language.,world_1,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT CountryCode FROM countrylanguage WHERE Language  =  'Spanish' AND IsOfficial  =  'T',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Name FROM conductor ORDER BY Age ASC,"SELECT Name, Age FROM conductor ORDER BY Age",825,easy,"What are the names of conductors, ordered by age?",orchestra,SELECT Name FROM conductor ORDER BY Age ASC,"SELECT Name, Age FROM conductor ORDER BY Age",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT Name FROM conductor ORDER BY Year_of_Work DESC,"SELECT Name, Year_of_Work FROM conductor ORDER BY Year_of_Work DESC",837,easy,"What are the names of conductors, sorted descending by the number of years they have worked?",orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,"SELECT Name, Year_of_Work FROM conductor ORDER BY Year_of_Work DESC",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",850,medium,Please show the record formats of orchestras in ascending order of count.,orchestra,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC",851,medium,"What are the major record formats of orchestras, sorted by their frequency?",orchestra,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Record_Company, COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",852,hard,List the record company shared by the most number of orchestras.,orchestra,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Record_Company, COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT name ,  grade FROM Highschooler","SELECT ID, name, grade FROM Highschooler",864,medium,Show the names and grades of each high schooler.,network_1,"SELECT name ,  grade FROM Highschooler","SELECT ID, name, grade FROM Highschooler",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT name ,  grade FROM Highschooler","SELECT ID, name, grade FROM Highschooler",865,medium,What are the names and grades for each high schooler?,network_1,"SELECT name ,  grade FROM Highschooler","SELECT ID, name, grade FROM Highschooler",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT grade FROM Highschooler,"SELECT ID, name, grade FROM Highschooler",867,easy,What is the grade of each high schooler?,network_1,SELECT grade FROM Highschooler,"SELECT ID, name, grade FROM Highschooler",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,"SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",878,hard,Which grade has the most high schoolers?,network_1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,"SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,"SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",879,hard,Return the grade that has the greatest number of high schoolers.,network_1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,"SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,"SELECT grade, COUNT(*)  FROM Highschooler  GROUP BY grade  HAVING COUNT(*) >= 4",880,easy,Show me all grades that have at least 4 students.,network_1,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,"SELECT grade, COUNT(*)  FROM Highschooler  GROUP BY grade  HAVING COUNT(*) >= 4",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT Highschooler.ID, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID",882,medium,Show the student IDs and numbers of friends corresponding to each.,network_1,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT Highschooler.ID, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID",883,medium,How many friends does each student have?,network_1,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID",884,medium,Show the names of high school students and their corresponding number of friends.,network_1,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID",885,medium,What are the names of the high schoolers and how many friends does each have?,network_1,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler)),896,hard,Show names of all high school students who do not have any friends.,network_1,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler)),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler)),897,hard,What are the names of students who have no friends?,network_1,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler)),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id,898,hard,Show the ids of high schoolers who have friends and are also liked by someone else.,network_1,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id,899,hard,What are the ids of students who both have friends and are liked?,network_1,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.liked_id,900,hard,Show name of all students who have some friends and also are liked by someone else.,network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.liked_id,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id,901,hard,What are the names of high schoolers who both have friends and are liked?,network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id JOIN Likes AS T3 ON T1.ID  =  T3.student_id,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT Highschooler.name, COUNT(Likes.liked_id)  FROM Highschooler  LEFT JOIN Likes  ON Highschooler.ID = Likes.student_id  GROUP BY Highschooler.ID",904,medium,"Show the names of high schoolers who have likes, and numbers of likes for each.",network_1,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT Highschooler.name, COUNT(Likes.liked_id)  FROM Highschooler  LEFT JOIN Likes  ON Highschooler.ID = Likes.student_id  GROUP BY Highschooler.ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT h.name, COUNT(l.liked_id) AS likes  FROM Highschooler h  JOIN Likes l ON h.ID = l.student_id  GROUP BY h.name",905,medium,"What are the names of high schoolers who have likes, and how many likes does each have?",network_1,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT h.name, COUNT(l.liked_id) AS likes  FROM Highschooler h  JOIN Likes l ON h.ID = l.student_id  GROUP BY h.name",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes GROUP BY liked_id ORDER BY COUNT(*) DESC LIMIT 1),907,extra,Give the name of the student with the most likes.,network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes GROUP BY liked_id ORDER BY COUNT(*) DESC LIMIT 1),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT AVG(T1.grade) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id,914,hard,Find the average grade of all students who have some friends.,network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT AVG(T1.grade) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT AVG(T1.grade) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id,915,hard,What is the average grade of students who have friends?,network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT AVG(T1.grade) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT student_id FROM Friend)),916,extra,Find the minimum grade of students who have no friends.,network_1,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT student_id FROM Friend)),FALSE,FALSE,TRUE,FALSE,FALSE,
SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT student_id FROM Friend)),917,extra,What is the lowest grade of students who do not have any friends?,network_1,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT student_id FROM Friend)),FALSE,FALSE,TRUE,FALSE,FALSE,
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT DISTINCT T1.state FROM owners AS T1 JOIN professionals AS T2 ON T1.state  =  T2.state,919,hard,Find the states where both owners and professionals live.,dog_kennels,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT DISTINCT T1.state FROM owners AS T1 JOIN professionals AS T2 ON T1.state  =  T2.state,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(age) FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id,920,hard,What is the average age of the dogs who have gone through any treatments?,dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(age) FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id,921,hard,Find the average age of the dogs who went through treatments.,dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT AVG(age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id,FALSE,FALSE,FALSE,FALSE,FALSE,
select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT D.name FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id JOIN Charges C ON T.treatment_type_code = C.charge_id WHERE C.charge_amount <= 1000,924,hard,Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .,dog_kennels,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT D.name FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id JOIN Charges C ON T.treatment_type_code = C.charge_id WHERE C.charge_amount <= 1000,FALSE,FALSE,FALSE,FALSE,FALSE,
select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT D.name FROM Dogs D JOIN Owners O ON D.owner_id = O.owner_id JOIN Treatments T ON D.dog_id = T.dog_id WHERE T.cost_of_treatment <= 1000,925,hard,What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?,dog_kennels,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT D.name FROM Dogs D JOIN Owners O ON D.owner_id = O.owner_id JOIN Treatments T ON D.dog_id = T.dog_id WHERE T.cost_of_treatment <= 1000,FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, role_code, first_name FROM Professionals   JOIN Treatments ON Professionals.professional_id = Treatments.professional_id   GROUP BY professional_id   HAVING COUNT(*) >= 2",932,medium,"Which professionals have done at least two treatments? List the professional's id, role, and first name.",dog_kennels,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, role_code, first_name FROM Professionals   JOIN Treatments ON Professionals.professional_id = Treatments.professional_id   GROUP BY professional_id   HAVING COUNT(*) >= 2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, role_code, first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",933,medium,"What are the id, role, and first name of the professionals who have performed two or more treatments?",dog_kennels,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, role_code, first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT owner_id, last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id ORDER BY charges.charge_amount DESC LIMIT 1",937,extra,Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.,dog_kennels,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT owner_id, last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id ORDER BY charges.charge_amount DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id, T1.zip_code FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id JOIN treatments AS T3 ON T2.dog_id = T3.dog_id JOIN charges AS T4 ON T3.treatment_id = T4.charge_id GROUP BY T1.owner_id ORDER BY SUM(T4.charge_amount) DESC LIMIT 1",940,extra,Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.,dog_kennels,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id, T1.zip_code FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id JOIN treatments AS T3 ON T2.dog_id = T3.dog_id JOIN charges AS T4 ON T3.treatment_id = T4.charge_id GROUP BY T1.owner_id ORDER BY SUM(T4.charge_amount) DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT owner_id, zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Charges ON Treatments.treatment_id = Charges.charge_id ORDER BY SUM(charge_amount) DESC LIMIT 1",941,extra,Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.,dog_kennels,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT owner_id, zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Charges ON Treatments.treatment_id = Charges.charge_id ORDER BY SUM(charge_amount) DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2",942,medium,Which professionals have done at least two types of treatments? List the professional id and cell phone.,dog_kennels,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2",FALSE,FALSE,TRUE,FALSE,FALSE,
"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) > 1",943,medium,Find the id and cell phone of the professionals who operate two or more types of treatments.,dog_kennels,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id, cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) > 1",FALSE,FALSE,TRUE,FALSE,FALSE,
"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT first_name, last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",944,extra,What are the first name and last name of the professionals who have done treatment with cost below average?,dog_kennels,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT first_name, last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT first_name, last_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",945,extra,Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.,dog_kennels,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT first_name, last_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT O.first_name, O.last_name, S.size_description  FROM Owners O  JOIN Dogs D ON O.owner_id = D.owner_id  JOIN Sizes S ON D.size_code = S.size_code",950,medium,"List each owner's first name, last name, and the size of his for her dog.",dog_kennels,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT O.first_name, O.last_name, S.size_description  FROM Owners O  JOIN Dogs D ON O.owner_id = D.owner_id  JOIN Sizes S ON D.size_code = S.size_code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT O.first_name, O.last_name, S.size_description  FROM Owners O  JOIN Dogs D ON O.owner_id = D.owner_id  JOIN Sizes S ON D.size_code = S.size_code",951,medium,"What are each owner's first name, last name, and the size of their dog?",dog_kennels,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT O.first_name, O.last_name, S.size_description  FROM Owners O  JOIN Dogs D ON O.owner_id = D.owner_id  JOIN Sizes S ON D.size_code = S.size_code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT D.name, T.date_of_treatment  FROM Dogs D  JOIN Breeds B ON D.breed_code = B.breed_code  JOIN Treatments T ON D.dog_id = T.dog_id  WHERE B.breed_code = (SELECT breed_code FROM Breeds ORDER BY COUNT(*) ASC LIMIT 1)",954,extra,List the names of the dogs of the rarest breed and the treatment dates of them.,dog_kennels,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT D.name, T.date_of_treatment  FROM Dogs D  JOIN Breeds B ON D.breed_code = B.breed_code  JOIN Treatments T ON D.dog_id = T.dog_id  WHERE B.breed_code = (SELECT breed_code FROM Breeds ORDER BY COUNT(*) ASC LIMIT 1)",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT D.name, T.date_of_treatment  FROM Dogs D  JOIN Breeds B ON D.breed_code = B.breed_code  JOIN Treatments T ON D.dog_id = T.dog_id  ORDER BY B.breed_name  LIMIT 1",955,extra,Which dogs are of the rarest breed? Show their names and treatment dates.,dog_kennels,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT D.name, T.date_of_treatment  FROM Dogs D  JOIN Breeds B ON D.breed_code = B.breed_code  JOIN Treatments T ON D.dog_id = T.dog_id  ORDER BY B.breed_name  LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",958,medium,What are the arriving date and the departing date of the dogs who have gone through a treatment?,dog_kennels,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",959,medium,Find the arriving date and the departing date of the dogs that received a treatment.,dog_kennels,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age ASC LIMIT 1,960,extra,List the last name of the owner owning the youngest dog.,dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age ASC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age ASC LIMIT 1,961,extra,Who owns the youngest dog? Give me his or her last name.,dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age ASC LIMIT 1,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(*) FROM Treatments,966,easy,How many dogs went through any treatments?,dog_kennels,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(*) FROM Treatments,TRUE,FALSE,FALSE,FALSE,FALSE,
SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(*) FROM Treatments,967,easy,Count the number of dogs that went through a treatment.,dog_kennels,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(*) FROM Treatments,TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, home_phone, cell_number FROM Professionals",994,medium,"List the email, cell phone and home phone of all the professionals.",dog_kennels,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, home_phone, cell_number FROM Professionals",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, home_phone, cell_number FROM Professionals",995,medium,"What are the email, cell phone and home phone of each professional?",dog_kennels,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, home_phone, cell_number FROM Professionals",TRUE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT b.breed_name, s.size_description  FROM Breeds b  JOIN Sizes s  ON b.breed_code = s.size_code",996,medium,What are all the possible breed type and size type combinations?,dog_kennels,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT b.breed_name, s.size_description  FROM Breeds b  JOIN Sizes s  ON b.breed_code = s.size_code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT Breeds.breed_name, Sizes.size_description  FROM Breeds  INNER JOIN Dogs ON Breeds.breed_code = Dogs.breed_code  INNER JOIN Sizes ON Sizes.size_code = Dogs.size_code",997,medium,Find the distinct breed type and size type combinations for dogs.,dog_kennels,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT DISTINCT Breeds.breed_name, Sizes.size_description  FROM Breeds  INNER JOIN Dogs ON Breeds.breed_code = Dogs.breed_code  INNER JOIN Sizes ON Sizes.size_code = Dogs.size_code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",998,medium,List the first name of all the professionals along with the description of the treatment they have done.,dog_kennels,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name, T2.treatment_type_description  FROM Professionals AS T1  JOIN Treatments AS T2  ON T1.professional_id = T2.professional_id  JOIN Treatment_Types AS T3  ON T2.treatment_type_code = T3.treatment_type_code",999,medium,What are each professional's first name and description of the treatment they have performed?,dog_kennels,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT T1.first_name, T2.treatment_type_description  FROM Professionals AS T1  JOIN Treatments AS T2  ON T1.professional_id = T2.professional_id  JOIN Treatment_Types AS T3  ON T2.treatment_type_code = T3.treatment_type_code",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT Name FROM singer WHERE Citizenship != 'French',1007,easy,What are the names of the singers who are not French citizens?,singer,"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT Name FROM singer WHERE Citizenship != 'French',FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1",1014,hard,Please show the most common citizenship of singers.,singer,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
select citizenship from singer group by citizenship order by count(*) desc limit 1,"SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1",1015,hard,What is the most common singer citizenship ?,singer,select citizenship from singer group by citizenship order by count(*) desc limit 1,"SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT s.Name, so.Title FROM singer s INNER JOIN song so ON s.Singer_ID = so.Singer_ID",1019,medium,What are the song titles and singer names?,singer,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT s.Name, so.Title FROM singer s INNER JOIN song so ON s.Singer_ID = so.Singer_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Sales > 300000,1021,medium,what are the different names of the singers that have sales more than 300000?,singer,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Sales > 300000,FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1),1022,medium,Show the names of singers that have more than one song.,singer,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1),FALSE,FALSE,FALSE,FALSE,FALSE,
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1),1023,medium,What are the names of the singers that have more than one songs?,singer,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1),FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT Name, SUM(Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID",1024,medium,Show the names of singers and the total sales of their songs.,singer,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT Name, SUM(Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID",FALSE,FALSE,FALSE,FALSE,FALSE,
"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT Properties.property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE Ref_Property_Types.property_type_description IN ('House','Apartment') AND Properties.room_count > 1",1033,hard,What are the names of properties that are either houses or apartments with more than 1 room?,real_estate_properties,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT Properties.property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE Ref_Property_Types.property_type_description IN ('House','Apartment') AND Properties.room_count > 1",FALSE,FALSE,FALSE,FALSE,FALSE,
